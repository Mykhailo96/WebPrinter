@model WP.Models.Purchase

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="container" style="margin-bottom: 15px">
        <div class="row">
            <div class="col-md-8">
                <br />
                <br />
                <br />
                    <h4>Purchase</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID)
                    @Html.HiddenFor(model => model.FileName)
                    @Html.HiddenFor(model => model.ApplicationUserID)
                    @Html.HiddenFor(model => model.OrderNumber)

                    @{ if (User.Identity.Name == "Admin")
                        {
                            @Html.HiddenFor(model => model.ObjectMaterial)
                            @Html.HiddenFor(model => model.ObjectPrecision)
                            @Html.HiddenFor(model => model.ObjecttColor)

                            <div class="form-group">
                                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                    <p>@Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })</p>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.OrderStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EnumDropDownListFor(model => model.OrderStatus, htmlAttributes: new { @class = "form-control" })
                                    <p>@Html.ValidationMessageFor(model => model.OrderStatus, "", new { @class = "text-danger" })</p>
                                </div>
                            </div>
                        }
                        else
                        {
                            @Html.HiddenFor(model => model.OrderStatus)
                            @Html.HiddenFor(model => model.Price)

                            <div class="form-group">
                                @Html.LabelFor(model => model.ObjectPrecision, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EnumDropDownListFor(model => model.ObjectPrecision, htmlAttributes: new { @class = "form-control" })
                                    <p>@Html.ValidationMessageFor(model => model.ObjectPrecision, "", new { @class = "text-danger" })</p>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ObjecttColor, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EnumDropDownListFor(model => model.ObjecttColor, htmlAttributes: new { @class = "form-control" })
                                    <p>@Html.ValidationMessageFor(model => model.ObjecttColor, "", new { @class = "text-danger" })</p>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ObjectMaterial, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EnumDropDownListFor(model => model.ObjectMaterial, htmlAttributes: new { @class = "form-control" })
                                    <p>@Html.ValidationMessageFor(model => model.ObjectMaterial, "", new { @class = "text-danger" })</p>
                                </div>
                            </div>

                            <div class="form-group col-md-10">
                                <input type="file" name="file" lang="en-us" />
                            </div>
                        }
                    }

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn primary" />
                        </div>
                    </div>
               
            </div>
        </div>
    </div>
                        }

<div style="margin-bottom: 10px">
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
